server.port=8095
mybatis.mapperLocations=classpath:mapping/*.xml

spring.datasource.name=maple
spring.datasource.username=root

#local
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&serverTimezone=GMT%2B8
spring.datasource.password=ok123

#mycat
#spring.datasource.url=jdbc:mysql://192.168.30.35:3310/maple?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&serverTimezone=GMT%2B8
#spring.datasource.password=root

#192.168.30.20
#spring.datasource.url=jdbc:mysql://192.168.30.20:3306/maple?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&serverTimezone=GMT%2B8
#spring.datasource.password=root




#使用druid数据源
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver

logging.level.com.neo.mapper=debug

#redis
redis.host=192.168.30.36
redis.port=6379
redis.timeout=10
redis.password=123456
redis.poolMaxTotal=1000
redis.poolMaxIdle=500
redis.poolMaxWait=500

#rabbitmq
spring.rabbitmq.host=192.168.30.20
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
spring.rabbitmq.virtual-host=/
#默认消费者自动启动，发生产环境记得改为 true
#spring.rabbitmq.listener.simple.auto-startup=true
spring.rabbitmq.listener.simple.auto-startup=false
#消费者的数量，消费者的最大数量
spring.rabbitmq.listener.simple.concurrency= 10
spring.rabbitmq.listener.simple.max-concurrency= 10
#每次从队列里边取的数量
spring.rabbitmq.listener.simple.prefetch= 1
#消费者消费失败之后把消费者重新加入队列里边
spring.rabbitmq.listener.simple.default-requeue-rejected= true
#队列满了，启动重试
spring.rabbitmq.template.retry.enabled=true
# 30 S之后启动重试
spring.rabbitmq.template.retry.initial-interval=30000
#重试最大三次
spring.rabbitmq.template.retry.max-attempts=3
#重试等待的时间
spring.rabbitmq.template.retry.max-interval=10000
#倍数，配置为1，就是第一次，等1S，第二次等2S ，以此类推
spring.rabbitmq.template.retry.multiplier=1.0
